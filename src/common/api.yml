openapi: 3.0.1
info:
  title: reseller-api
  description: Boticario Reseller Api
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Deal
    description: Deal API
  - name: Auth
    description: Auth API
  - name: User
    description: User API
  - name: Specification
    description: The swagger API 
  - name: Cashback
    description: The cashback API
paths:
  /user:
    get:
      tags:
        - User
      description: Fetch all users
      responses:
        200:
          description: Returns all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
    post:
      tags:
        - User
      description: Register a new user
      requestBody:
        description: user registration model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
        required: true
      responses:
        200:
          description: Returns created user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBody'
  /user/{id}:
    get:
      tags:
        - User
      description: Fetch a specific users
      parameters:
        - name: id
          in: path
          description: The id of the user to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns a specific user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBody'
    delete:
      tags:
        - User
      description: Delete a specific users
      parameters:
        - name: id
          in: path
          description: The id of the user to be deleted
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete a specific user
          content: {}
    put:
      tags:
        - User
      description: Update a user
      requestBody:
        description: user model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
        required: true
      parameters:
        - name: id
          in: path
          description: The id of the user to update
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns updated user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBody'
  /profile:
    get:
      tags:
        - Profile
      description: Fetch current logged in user
      responses:
        200:
          description: Return the current logged in user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBody'
    delete:
      tags:
        - Profile
      description: Delete the current logged in user
      responses:
        200:
          description: Delete the logged in user
          content: {}
    put:
      tags:
        - Profile
      description: Update the logged in user
      requestBody:
        description: user model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBody'
        required: true
      responses:
        200:
          description: Returns updated user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBody'
  /profile/cashback:
    get:
      tags:
        - Profile
        - Cashback
      description: Fetch cashback from logged in user
      responses:
        200:
          description: Returns the total amount of cashback
          content:
            application/json:
              schema:
                type:
                  number
  /auth/token:
    post:
      tags:
        - Auth
      description: Get user authentication token
      requestBody:
        description: user authentication model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthBody'
        required: true
      responses:
        200:
          description: Returns user authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponseBody'
  /deal:
    get:
      tags:
        - Deal
      description: Fetch all deals
      responses:
        200:
          description: Returns all deals
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealList'
    post:
      tags:
        - Deal
      description: Create a new deal
      requestBody:
        description: an deal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DealBody'
        required: true
      responses:
        200:
          description: Returns all deals
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealBody'
  /deal/{id}:
    get:
      tags:
        - Deal
      description: Fetch a specific deal
      parameters:
        - name: id
          in: path
          description: The id of the deal to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns a specific deal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealBody'
    delete:
      tags:
        - Deal
      description: Delete a specific deal
      parameters:
        - name: id
          in: path
          description: The id of the deal to be deleted
          required: true
          schema:
            type: string
      responses:
        200:
          description: Delete a specific deal
          content: {}
  /cashback/{cpf}:
    get:
      tags:
        - Cashback
      description: Fetch cashback from a specific cpf
      parameters:
        - name: cpf
          in: path
          description: The cpf of the user to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns the total amount of cashback
          content:
            application/json:
              schema:
                type:
                  number
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  schemas:
    DealBody:
      title: deal
      required:
        - cpf
        - value
      type: object
      properties:
        id:
          type: number
        date:
          type: string
          format: date
        cpf:
          type: string
        value:
          type: number
        cashback_percent:
          type: number
        cashback_value:
          type: number
        status:
          type: string
    DealList:
      type:
        array
      items:
        $ref: '#/components/schemas/DealBody'
    AuthBody:
      title: auth request
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    UserBody:
      title: user register request
      required:
        - email
        - username
        - password
        - name
        - user_metadata
      type: object
      properties:
        user_id:
          type: string
        email:
          type: string
        username:
          type: string
        nickname:
          type: string
        picture:
          type: string
        password:
          type: string
        phone_number:
          type: string
        given_name:
          type: string
        family_name:
          type: string
        name:
          type: string
        user_metadata:
          $ref: '#/components/schemas/UserMetadataBody'
        # app_metadata:
        #   type: array
        #   items:
        #     type: 
    UserMetadataBody:
      title: custom user fields
      required:
        - cpf
      type: object
      properties:
        cpf:
          type: string
    UserList:
      type:
        array
      items:
        $ref: '#/components/schemas/UserBody'
    TokenResponseBody:
      title: token response body
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: number
        scope:
          type: string
        id_token:
          type: string
